name: Snapshot and Timestamp

# Execute this as a biweekly cron job and on changes to repository/
# when new published metadata is submitted.
on:
  # Enable cron for re-signing snapshot and timestamp every week
  schedule:
    - cron: '0 0 */7 * *' # every 7 days
  # When a new root is staged
  push:
    branches:
      - main
    paths:
      - 'repository/staged/root.json'
  workflow_dispatch:

jobs:
  snapshot_and_timestamp:
    runs-on: ubuntu-20.04
    permissions:
      id-token: 'write'
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
        with:
          fetch-depth: 0
      - name: setup
        run: |
          echo "REPO=$(pwd)/repository/" >> $GITHUB_ENV
          echo "SNAPSHOT_KEY=gcpkms://projects/project-rekor/locations/global/keyRings/sigstore-root/cryptoKeys/snapshot" >> $GITHUB_ENV
          echo "TIMESTAMP_KEY=gcpkms://projects/project-rekor/locations/global/keyRings/sigstore-root/cryptoKeys/timestamp" >> $GITHUB_ENV
      - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # v2.2.0
        with:
          go-version: 1.17.x
      - uses: google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb # v0.5.1
        with:
          project_id: project-rekor
      # Setup OIDC->SA auth
      - uses: google-github-actions/auth@b258a9f230b36c9fa86dfaa43d1906bd76399edb # v0.6.0
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/237800849078/locations/global/workloadIdentityPools/root-signing-pool/providers/sigstore-root'
          service_account: 'sigstore-root-signing@project-rekor.iam.gserviceaccount.com'
          create_credentials_file: true
      - name: Login
        run: |
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud auth list

      # Snapshot and timestamp
      - name: build
        run: |
          sudo apt-get install libpcsclite-dev
          go build -o tuf -tags=pivkey ./cmd/tuf/
      - name: snapshot and timestamp
        run: |
          ./tuf snapshot -repository $REPO
          ./tuf sign -repository $REPO -roles snapshot -key ${SNAPSHOT_KEY}
          ./tuf timestamp -repository $REPO
          ./tuf sign -repository $REPO -roles timestamp -key ${TIMESTAMP_KEY}
      - name: publish
        run: |
          ./tuf publish -repository $REPO
      - name: Upload snapshot and timestamp
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v2.3.1
        with:
          name: snapshot-and-timestamp
          path: repository/repository/
          retention-days: 5

  push:
    needs: snapshot_and_timestamp
    runs-on: ubuntu-20.04
    permissions:
      pull-requests: 'write'
      contents: 'write'
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v2.1.0
        with:
          name: snapshot-and-timestamp
          path: repository/repository/
      # Open pull request changes
      - name: create pull request
        uses: peter-evans/create-pull-request@bd72e1b7922d417764d27d30768117ad7da78a0e # v4.0.2
        with:
          commit-message: update snapshot and timestamp
          title: Update Snapshot and Timestamp
          body: Sign snapshot and timestamp files
          branch: update-snapshot-timestamp
          signoff: true
          reviewers: asraa,dlorenc
